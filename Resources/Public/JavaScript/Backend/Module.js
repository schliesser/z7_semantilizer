import{Node}from"@zeroseven/semantilizer/Node.js";import{Translation}from"@zeroseven/semantilizer/Translation.js";import Icons from"@typo3/backend/Icons.js";class Module{constructor(e,t){this.element=e,this.parent=t,this.init()}clearContent(e){for(var t;t=(e||this.element).firstElementChild;)(e||this.element).removeChild(t)}drawDescription(){this.parent.headlines.length&&Node.create("p").setContent(Translation.translate("overview.description")).appendTo(this.element)}drawList(){if(this.parent.headlines.length){var e=Node.create("div").setBemClassName("listwrap").appendTo(this.element);const i=Node.create("ul").setBemClassName("list").appendTo(e);this.parent.headlines.forEach((a,e)=>{var t=Node.create("li").setBemClassName("item","level"+a.type).appendTo(i);if(a.isEditableType()){var n=Node.create("select").setBemClassName("control","level"+a.type).addAttribute("data-index",e).addEventListener("change",e=>{e=e.target.options[e.target.selectedIndex].value;a.update(e)}).appendTo(t);for(let e=1;e<=6;e++){var s=Node.create("option").addAttributes({value:e}).setContent("H"+e).appendTo(n);a.type===e&&(s.selected=!0)}}else{e=Node.create("button").setBemClassName("control","level"+a.type).addAttribute("type","button").setContent("H"+a.type).appendTo(t);a.isRelated()&&a.relatedHeadline().isEditableType()?(e.setAttribute("data-related-to",a.edit.relatedTo),e.addEventListener("click",e=>{var t=i.querySelectorAll('[data-index="'+this.parent.headlines.indexOf(a.relatedHeadline())+'"]');t&&t[t.length-1].focus(),e.preventDefault()})):e.disabled=!0}(a.isEditableRecord()?Node.create("a").addAttribute("href",a.getEditUrl()):Node.create("span")).setContent(a.text).setBemClassName("headline",a.hasIssues()?"error":"").appendTo(t),a.hasIssues()&&Node.create("button").addAttributes({type:"button",title:Translation.translate("overview.notification.show")}).setBemClassName("issue-info").appendTo(t).addEventListener("click",a.showIssue)}),Icons.getIcon("actions-refresh",Icons.sizes.small).then(e=>Node.create("button").addAttribute("type","button").addAttribute("title",Translation.translate("overview.refresh")).setContent(e).setBemClassName("refresh").addEventListener("click",()=>this.parent.refresh(!0)).appendTo(this.element)),this.wrap=e}else Node.create("p").setContent(Translation.translate("overview.empty")).appendTo(this.element)}drawNotificationToggle(){const a=this.parent.notification.autoload.enabled();Icons.getIcon(a?"actions-toggle-on":"actions-toggle-off",Icons.sizes.small).then(e=>{const t=Node.create("button").addAttribute("type","button").setContent(Translation.translate(a?"overview.notifications.on":"overview.notifications.off")).setBemClassName("notifications-toggle").appendTo(this.element);t.insertAdjacentHTML("afterbegin",e+" "),t.addEventListener("click",()=>{a?(this.parent.notification.hideAll(),this.parent.notification.autoload.disable()):(this.parent.notification.showIssues(),this.parent.notification.autoload.enable()),this.element.removeChild(t),this.drawNotificationToggle()})})}lockStructure(){this.parent.notification.hideAll();var e=Node.create("div").setBemClassName("lock").appendTo(this.wrap);Node.create("span").setBemClassName("lock-message").setContent(Translation.translate("overview.update")).appendTo(e)}drawStructure(){this.clearContent(),this.drawDescription(),this.drawList(),this.drawNotificationToggle()}drawError(){this.clearContent(),Node.create("p").setContent(Translation.translate("overview.error")).appendTo(this.element)}loader(){Icons.getIcon("spinner-circle",Icons.sizes.small).then(e=>{this.element.insertAdjacentHTML("beforeend",e+'<span style="margin-left: 0.3em">'+Translation.translate("overview.loading")+"</span>")})}init(){this.clearContent()}}export{Module};